<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="300 seconds">

	<property name="smtpHost" value="smtp.rainasmoon.com" />  
	<property name="smtpPort" value="25" />  
	<property name="username" value="help@rainasmoon.com" />  
	<property name="password" value="Fhwl7758" />  
	<property name="SSL" value="false" />  
	<property name="email_to" value="rainasmoon@126.com,pay1all@126.com" />  
	<property name="email_from" value="help@rainasmoon.com" />  
	<property name="email_subject" value="【Error】: %logger" />  
        
	<contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
		<resetJUL>true</resetJUL>
	</contextListener>
      
     <appender name="EMAIL" class="ch.qos.logback.classic.net.SMTPAppender">  
         <smtpHost>${smtpHost}</smtpHost>  
         <smtpPort>${smtpPort}</smtpPort>  
         <username>${username}</username>  
         <password>${password}</password>  
         <SSL>${SSL}</SSL>  
         <asynchronousSending>false</asynchronousSending>  
         <to>${email_to}</to>  
         <from>${email_from}</from>  
         <subject>${email_subject}</subject>  
         <layout class="ch.qos.logback.classic.html.HTMLLayout" >  
             <pattern>%date%level%thread%logger{0}%line%message</pattern>  
         </layout>  
         <filter class="ch.qos.logback.core.filter.EvaluatorFilter">    
             <evaluator class="ch.qos.logback.classic.boolex.JaninoEventEvaluator">  
                 <expression>  
                     <!-- & encoded as &amp; -->  
                     if(level > WARN &amp;&amp; null != throwable) {  
                         return true;  
                     }  
                     return false;  
                 </expression>    
             </evaluator>    
             <onMatch>ACCEPT</onMatch>    
             <onMismatch>DENY</onMismatch>      
         </filter>  
    </appender>  

	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
			</pattern>
		</encoder>
	</appender>

	<appender name="rollingFile"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>./logs/onepayrolling.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>./logs/onepayrolling.%d{yyyy-MM-dd}.log
			</fileNamePattern>
		</rollingPolicy>
		<encoder>
			<pattern>%date{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
			</pattern>
		</encoder>
		
	</appender>

	<appender name="accessLoggingFile"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>./logs/onepayaccess.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>./logs/onepayaccess.%d{yyyy-MM-dd}.log
			</fileNamePattern>
		</rollingPolicy>
		<encoder>
			<pattern>%date{yyyy-MM-dd HH:mm:ss} - %msg%n
			</pattern>
		</encoder>
		
	</appender>

	<appender name="exceptionLogFile"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>./logs/onepayexception.log</file>
		<!-- 按每小时滚动文件，如果一个小时内达到10M也会滚动文件, 滚动文件将会压缩成zip格式 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>./logs/onepayexception-%d{yyyy-MM-dd}.%i.zip
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<!-- 独立的pattern -->
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss},%msg%n</pattern>
		</encoder>
		
	</appender>

	<logger name="com.rainasmoon" level="debug" />
	<logger name="org.springframework.beans.TypeConverterDelegate">
		<level value="info" />
	</logger>
	<logger name="com.rainasmoon.onepay.util.AccessLogFilter" level="DEBUG"
		additivity="false">
		<appender-ref ref="accessLoggingFile" />
		<appender-ref ref="console"></appender-ref>		   
        <appender-ref ref="EMAIL"/> 
    </logger>
		
	<logger name="warn" level="WARN" additivity="true">
		<appender-ref ref="exceptionLogFile" />
		<appender-ref ref="EMAIL"/>  
	</logger>

	<logger name="org.hibernate" level="info" />
	<logger name="org.hibernate.type.descriptor.sql.BasicBinder"
		level="info" />

	<root level="info">
		<appender-ref ref="console" />
		<appender-ref ref="rollingFile" />
	</root>
</configuration>
