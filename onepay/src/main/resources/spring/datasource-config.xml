<?xml version="1.0" encoding="UTF-8"?>
<!-- Application context definition for PetClinic Datasource. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/jdbc
         http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
         http://www.springframework.org/schema/jee
         http://www.springframework.org/schema/jee/spring-jee.xsd">

	<!-- ========================= DATASOURCE DEFINITION ========================= -->

	<!-- DataSource configuration for the tomcat jdbc connection pool See here 
		for more details on commons-dbcp versus tomcat-jdbc: http://blog.ippon.fr/2013/03/13/improving-the-performance-of-the-spring-petclinic-sample-application-part-3-of-5/ -->


	<beans profile="dev">
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
			p:driverClassName="${dev.jdbc.driverClassName}" p:url="${dev.jdbc.url}"
			p:username="${dev.jdbc.username}" p:password="${dev.jdbc.password}"
			p:initialSize="10" p:minIdle="10" p:maxIdle="100" p:maxActive="100"
			p:maxWait="6000" p:removeAbandoned="true" p:removeAbandonedTimeout="60"
			p:logAbandoned="true" p:testOnBorrow="true" p:testOnReturn="false"
			p:testWhileIdle="false" p:useEquals="false" p:fairQueue="false"
			p:timeBetweenEvictionRunsMillis="30000" p:minEvictableIdleTimeMillis="30000"
			p:validationInterval="1800000" p:validationQuery="/* ping */ SELECT 1 FROM users WHERE 1=0" />

		<!-- Database initializer. If any of the script fails, the initialization 
			stops. -->
		<!-- As an alternative, for embedded databases see <jdbc:embedded-database/>. -->
		<jdbc:initialize-database data-source="dataSource">
			<jdbc:script location="${dev.jdbc.initLocation}"
				encoding="UTF-8" />
			<jdbc:script location="${dev.jdbc.dataLocation}"
				encoding="UTF-8" />
		</jdbc:initialize-database>
	</beans>

	<beans profile="mysql">
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
			p:driverClassName="${mysql.jdbc.driverClassName}" p:url="${mysql.jdbc.url}"
			p:username="${mysql.jdbc.username}" p:password="${mysql.jdbc.password}"
			p:initialSize="10" p:minIdle="10" p:maxIdle="50" p:maxActive="100"
			p:maxWait="6000" p:removeAbandoned="true" p:removeAbandonedTimeout="60"
			p:logAbandoned="true" p:testOnBorrow="true" p:testOnReturn="false"
			p:testWhileIdle="false" p:useEquals="false" p:fairQueue="false"
			p:timeBetweenEvictionRunsMillis="30000" p:minEvictableIdleTimeMillis="30000"
			p:validationInterval="1800000" p:validationQuery="/* ping */ SELECT 1" />
		<jdbc:initialize-database data-source="dataSource">
			<jdbc:script location="${mysql.jdbc.initLocation}"
				encoding="UTF-8" />
			<jdbc:script location="${mysql.jdbc.dataLocation}"
				encoding="UTF-8" />
		</jdbc:initialize-database>
	</beans>

	<beans profile="prod">
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
			p:driverClassName="${prod.jdbc.driverClassName}" p:url="${prod.jdbc.url}"
			p:username="${prod.jdbc.username}" p:password="${prod.jdbc.password}"
			p:initialSize="10" p:minIdle="10" p:maxActive="50" p:maxWait="6000"
			p:removeAbandoned="true" p:removeAbandonedTimeout="60"
			p:logAbandoned="true" p:testOnBorrow="true" p:testOnReturn="false"
			p:testWhileIdle="true" p:useEquals="false" p:fairQueue="false"
			p:timeBetweenEvictionRunsMillis="30000" p:minEvictableIdleTimeMillis="30000"
			p:jmxEnabled="true" p:validationInterval="10800000"
			p:validationQuery="/* ping */ SELECT 1"
			p:jdbcInterceptors="org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;
            org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer" />
	</beans>

</beans>