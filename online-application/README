a new beginning.

https://github.com/rainasmoon/online-application.git

    redis-server：Redis服务器的daemon启动程序
    redis-cli：Redis命令行操作工具。当然，你也可以用telnet根据其纯文本协议来操作
    redis-benchmark：Redis性能测试工具，测试Redis在你的系统及你的配置下的读写性能
    redis-stat：Redis状态检测工具，可以检测Redis当前状态参数及延迟状况 

flot : http://www.flotcharts.org/flot/examples/basic-usage/index.html
redis
telnet 127.0.0.1 6379
boot css
no sql test
uuid
capcha
error msg.
验证码
webjar
dandelion
jquery
profile active
spring data jpa
validator
logback
upload & download
dandelion core
bootstrap
bind select list
tag

MD5
-XX:PermSize=64M -XX:MaxPermSize=128M
hbm2ddl 

-Xms256m -Xmx512m -XX:MaxPermSize=128m -Dfile.encoding=UTF-8 -Djava.net.preferIPv4Stack=true

el

客户端和服务器端代码
数组对象

-Djetty.port=10000
-XX:PermSize=64M -XX:MaxPermSize=128M
-Ddandelion.mode=development
-Dspring.profiles.active=dev


/***********************************************************************************/
/*** deploy to prod
/***********************************************************************************/

1 change web.xml 's profile to 'prod'.
2 make sure you have the right value in data-access.properties.

/***********************************************************************************/
/*** next step
/***********************************************************************************/

functional test.
stateless.
MD5


/***********************************************************************************/
/*** performance
/***********************************************************************************/
jit compiler



1 put log to an error level.
2 use my sql.
3 jmeter test.
 paginated. 
 warm up JIT compiler.
 
4 heap. the dandelion. 1G of heap
jProfiler YourKit.

dandelion

5 go stateless, [use http session as kind of cache.]
6 lower the amount of data stored in the user's HTTP session.
* remove sessionattribute and use id.
7 nio instead of io in tomcat.
8 jvm will lock some thread.
tomcat-jdbc instead of commons-dbcp. max and initalsize.
webjars.
static resources, CDN

9 use cache 
10 lazy load and open session in view.

11 cache, last name is not change frequently, like clause is very slow on db. so we cache this result for 60 seconds.
12 showSql = true to see if there is any unnecessary sql request.

creating a "real" test case
removing data in the http sessions.
removing the jvm locks
tuning the persistence layer
adding a cache.











